name: CI (Windows)
on:
  workflow_call:
jobs:
  build:
    name: Windows
    runs-on: windows-2019 # Qt 6.2 only support MSVC 2019.
    steps:
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        cache: true
        cache-key-prefix: ${{ runner.os }}-install-qt-action
        version: 6.2.*
    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest
    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v3.0.11
      with:
        path: C:\VulkanSDK
        key: ${{ runner.os }}-vulkanSDK
    - if: ${{ steps.cache-vulkan.outputs.cache-hit != 'true' }}
      name: Install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.224.1/windows/VulkanSDK-1.3.224.1-Installer.exe" -OutFile VulkanSDK.exe
        .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install
    - name: Set Vulkan SDK path. 
      run:  echo "VULKAN_SDK=C:\VulkanSDK" >> $env:GITHUB_ENV 
    - name: Initialize VCPKG
      run: .\vcpkg\bootstrap-vcpkg.bat
    - name: Cache VCPKG
      uses: actions/cache@v3.0.11
      id: cache-vcpkg
      with:
        path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
        key: ${{ runner.os }}-VCPKG-${{ hashFiles('**/CMakeLists.txt', '**/Cargo.lock', '**/Cargo.toml') }}
    - if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
      name: Install VCPKG packages
      run: .\vcpkg-restore.ps1
    - name: Cache CMake Build Files
      uses: actions/cache@v3.0.11
      id: cache-cmake
      with:
        path: |
          D:/a/obliteration/obliteration/build
          D:/a/obliteration/obliteration/src/target
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt', '**/Cargo.lock', '**/Cargo.toml', '.github/workflows/*.yml') }}
    - name: Run CMake
      run: cmake -B build -A x64
    - name: Build
      run: cmake --build build --config Release
    - name: Export artifacts
      run: cmake --install build --prefix dist
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: obliteration-win64
        path: dist
